[vmc]
# number of independant run
num_vmc_run = integer(min=1)
# number of samples to generate in each independant run
num_sample = integer(min=0)
# number of sweep per sample
num_sweep_per_sample = integer(min=1)
# number of sweep to thermalize
num_bath_sweep = integer(min=0)

# 'heat-bath' or 'metropolis' ?
accept_method = option('metropolis','heat-bath')
# print level
iprint = integer(default=1)
# merge and redistribute samples
redistribute_samples = boolean(default=true)

[cgen]
# number of spins to flip in each update
num_flip = integer(min=1)
# mag = # of up spins - # of down spins,
# default value of mag is None,
# uncomment the following line to specify mag,
mag = integer(default=None)
# probability of flipping all spins
inverse_rate = float(min=0.0, max=1.0)

[sr]
# ['sd'|'delta'|'pinv'|'trunc']
reg_method = option('sd','delta','trunc','pinv')
# used in 'trunc' and 'carleo' reg_methods
lambda = float(min=0)
# used in 'trunc' reg_method
eps_trunc = float(min=0)
# used in non 'sd' reg_mothods, layer wise evaluation of `S` matrix, buggy.
sr_layerwise = boolean
# factors for gradients in r and theta networks, used in r-theta network
rtheta_training_ratio= float_list(min=2,max=2)

[optimize]
# ['gd'|'adam'|'rmsprop']
optimize_method = option('gd','adam','rmsprop')
# learning rate
step_rate = float(min=0.0)
# momentum
momentum = float(min=0.0, max=1.0)
# number of iteration
max_iter = integer(min=0, default=1000)

[hamiltonian]
# ['J1J2'|'TFI']
# * J1J2, J1-J2 spin 1/2 chain.
model = option('J1J2','TFI')
size = int_list(min=1, max=2)
periodic = boolean
J1 = float(default=1.0)
J1z = float(default=None)

# used in J1J2 model
J2 = float(default=0.0)
J2z = float(default=None)

# used in TFI model
h = float(default=0.0)
EG = float(default=None)

[mpi]
# number of cores used
num_core = integer(min=1, default=None)
